/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.texas.csit.attendance;

import java.awt.GridLayout;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Yuba Raj Kalathoki
 */
public class AttendanceEditPanel extends javax.swing.JPanel {

    List<JCheckBox> checkBoxes;

    /**
     * Creates new form AttendanceEditPanel
     */
    public AttendanceEditPanel() {
        initComponents();
        attendanceNotAvailablePanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        attendanceEditOuterPanel = new javax.swing.JPanel();
        attendanceEditorPanel = new javax.swing.JPanel();
        attendanceEditScrollPane = new javax.swing.JScrollPane();
        attendanceEditInnerPanel = new javax.swing.JPanel();
        attendanceUpdateButton = new javax.swing.JButton();
        attendanceNotAvailablePanel = new javax.swing.JPanel();
        attendanceNotAvailableLabel = new javax.swing.JLabel();

        attendanceEditOuterPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Attendance Edit", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(0, 0, 204))); // NOI18N

        attendanceEditorPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student's roll numbers", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 0, 204))); // NOI18N

        javax.swing.GroupLayout attendanceEditInnerPanelLayout = new javax.swing.GroupLayout(attendanceEditInnerPanel);
        attendanceEditInnerPanel.setLayout(attendanceEditInnerPanelLayout);
        attendanceEditInnerPanelLayout.setHorizontalGroup(
            attendanceEditInnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 397, Short.MAX_VALUE)
        );
        attendanceEditInnerPanelLayout.setVerticalGroup(
            attendanceEditInnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 276, Short.MAX_VALUE)
        );

        attendanceEditScrollPane.setViewportView(attendanceEditInnerPanel);

        attendanceUpdateButton.setText("Update");
        attendanceUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendanceUpdateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout attendanceEditorPanelLayout = new javax.swing.GroupLayout(attendanceEditorPanel);
        attendanceEditorPanel.setLayout(attendanceEditorPanelLayout);
        attendanceEditorPanelLayout.setHorizontalGroup(
            attendanceEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attendanceEditorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(attendanceEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(attendanceEditScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(attendanceEditorPanelLayout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(attendanceUpdateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        attendanceEditorPanelLayout.setVerticalGroup(
            attendanceEditorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attendanceEditorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(attendanceEditScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(attendanceUpdateButton)
                .addContainerGap())
        );

        attendanceNotAvailablePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        attendanceNotAvailableLabel.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        attendanceNotAvailableLabel.setText("Sorry, Attendace is not available for today.");

        javax.swing.GroupLayout attendanceNotAvailablePanelLayout = new javax.swing.GroupLayout(attendanceNotAvailablePanel);
        attendanceNotAvailablePanel.setLayout(attendanceNotAvailablePanelLayout);
        attendanceNotAvailablePanelLayout.setHorizontalGroup(
            attendanceNotAvailablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attendanceNotAvailablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(attendanceNotAvailableLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        attendanceNotAvailablePanelLayout.setVerticalGroup(
            attendanceNotAvailablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attendanceNotAvailablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(attendanceNotAvailableLabel)
                .addContainerGap())
        );

        javax.swing.GroupLayout attendanceEditOuterPanelLayout = new javax.swing.GroupLayout(attendanceEditOuterPanel);
        attendanceEditOuterPanel.setLayout(attendanceEditOuterPanelLayout);
        attendanceEditOuterPanelLayout.setHorizontalGroup(
            attendanceEditOuterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attendanceEditOuterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(attendanceEditOuterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(attendanceEditorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(attendanceNotAvailablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        attendanceEditOuterPanelLayout.setVerticalGroup(
            attendanceEditOuterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attendanceEditOuterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(attendanceNotAvailablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(attendanceEditorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(attendanceEditOuterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(attendanceEditOuterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void attendanceUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendanceUpdateButtonActionPerformed
        int i = 0;
        for (JCheckBox checkBox : checkBoxes) {
            if (checkBox.isSelected()) {
                i++;
            }
        }

        if (i == 0) {
            JOptionPane.showMessageDialog(null, "Please select atleast one student's roll number.");
        } else {
            Date attendanceDate = new Date();
            Timestamp timestamp = new Timestamp(attendanceDate.getTime());
            AttendanceModel model = new AttendanceModel();
            String date = model.getTodaysDate();
            Connection cn = DatabaseConnection.getConnection();
            try {
                Statement stat = cn.createStatement();
                //delete old attendance for particular day and add new selected
                String sql = "delete from attendance_info where attendance_date LIKE '" + date + "%'";
                stat.executeUpdate(sql);
                for (JCheckBox c : checkBoxes) {
                    if (c.isSelected()) {
                        String sql1 = "insert into attendance_info (roll_no, attendance_status, attendance_date) values (" + c.getText() + ", 'P', '" + timestamp + "')";
                        stat.executeUpdate(sql1);
                    } else {
                        String sql2 = "insert into attendance_info (roll_no, attendance_status, attendance_date) values (" + c.getText() + ", 'A', '" + timestamp + "')";
                        stat.executeUpdate(sql2);
                    }
                }
                JOptionPane.showMessageDialog(null, "Attendance updated!");
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Failed!");
            }
        }
    }//GEN-LAST:event_attendanceUpdateButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel attendanceEditInnerPanel;
    private javax.swing.JPanel attendanceEditOuterPanel;
    private javax.swing.JScrollPane attendanceEditScrollPane;
    public javax.swing.JPanel attendanceEditorPanel;
    private javax.swing.JLabel attendanceNotAvailableLabel;
    public javax.swing.JPanel attendanceNotAvailablePanel;
    private javax.swing.JButton attendanceUpdateButton;
    // End of variables declaration//GEN-END:variables

    public void displayStudentsRollNoToEditAttendance() {
        checkBoxes = new ArrayList<>();
        AttendanceModel model = new AttendanceModel();
        ArrayList<AttendanceInfoDto> attendanceList = model.getTodaysAttendance();
        if (attendanceList.size() > 0) {
            attendanceEditInnerPanel.removeAll();
            attendanceEditInnerPanel.setLayout(new GridLayout(0, 2, 10, 10));
            Connection cn = DatabaseConnection.getConnection();
            String sql = "Select * from student";
            ArrayList<String> studentList = new ArrayList<>();
            try {
                Statement stat = cn.createStatement();
                ResultSet rs = stat.executeQuery(sql);
                while (rs.next()) {
                    String name = rs.getString("roll_number");
                    studentList.add(name);
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            for (String s : studentList) {
                JCheckBox cb = new JCheckBox();
                cb.setText(s);
                for (AttendanceInfoDto dto : attendanceList) {
                    if (dto.getRollNo() == Integer.parseInt(s) && dto.getAttendanceStatus() == 'P') {
                        cb.setSelected(true);
                    }
                }
                checkBoxes.add(cb);// for button functionality
                attendanceEditInnerPanel.add(cb);
            }
        } else {
            attendanceNotAvailablePanel.setVisible(true);
            attendanceEditorPanel.setVisible(false);
        }
    }
}
